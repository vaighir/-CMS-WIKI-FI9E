image: docker
services:
  - docker:dind
# add building angular package
# add building war file
# add building docker images

stages:
  - build
  - staging
  - production

build-mysql:
  stage: build
  script:
  - docker build -f docker/mysql/Dockerfile --iidfile imageid.txt -t registry.heroku.com/cms-lf6-fi9e/mysql .
  - docker login -u _ -p $HEROKU_API_KEY registry.heroku.com
  - docker push registry.heroku.com/cms-lf6-fi9e/mysql
  - apk add --no-cache curl
  - echo "Docker Image ID is $(cat imageid.txt)"
  - |-
    curl -X PATCH https://api.heroku.com/apps/cms-lf6-fi9e/formation --header "Content-Type: application/json" --header "Accept: application/vnd.heroku+json; version=3.docker-releases" --header "Authorization: Bearer ${HEROKU_TOKEN}" --data '{ "updates": [ { "type": "web", "docker_image": "'$(cat imageid.txt)'" } ] }'


staging:
  type: deploy
  stage: staging
  script:
    - dpl --provider=heroku --app=$HEROKU_APP_STAGING --api-key=$HEROKU_API_KEY
  when: manual

production:
  type: deploy
  stage: production
  script:
    - dpl --provider=heroku --app=$HEROKU_APP_PRODUCTION --api-key=$HEROKU_API_KEY
  when: manual
#  only:
#    - master
